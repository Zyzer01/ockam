name: Nix Installer
description: Nix Installer

inputs:
  cache-unique-id:
    description: Unique ID to differentiate caches
    required: true

outputs:
  cache-hit:
    description: Whether the cache was restored or not
    value: ${{ steps.nix-cache.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@3ebd1aebb47f95493b62de6eec0cac3cd74e50a9

    - name: Cache nix env take N+1
      uses: actions/cache@v2
      id: nix-cache
      with:
        path: |
          /tmp/nix-cache
        key: nix-cache-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ inputs.cache-unique-id }}-${{ hashFiles('**/flake.lock') }}

    - name: cache hit
      if: steps.nix-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        sudo systemctl stop nix-daemon
        sudo chown -R 777 /tmp/nix-cache
        sudo chown -R 777 /nix
        sudo cp -fRT /tmp/nix-cache/ /nix/
        sudo systemctl start nix-daemon
